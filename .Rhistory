merged40_clstr_df$ahl_tcs <- ifelse(merged40_clstr_df$Entry %in% filt_tcs_merged$Entry, "tcs", "")
# Checking for matches with filt_ahl_merged and assign "ahl"
merged40_clstr_df$ahl_tcs <- ifelse(merged40_clstr_df$Entry %in% filt_ahl_merged$Entry, "ahl", merged40_clstr_df$ahl_tcs)
View(merged40_clstr_df)
library("rio")
library("stringr")
library('ggtree')
library('ggplot2')
library('treeio')
library('dplyr')
## USING 50,100 entries file where Python script extracted Class
merged40_df <- import("Data/2nd Objective Data - Clustering Trees/merged40 tree additional data/merged_ahl_tcs_for_merged40tree.tsv")
#merged40_tree
merged40_tree <- ape::read.tree("Data/2nd Objective Data - Clustering Trees/4 - mega/1 - merged40/newick_merged40.txt")
merged40_tree
# Extracting the pattern from the "tree" object
pattern <- "(tr|sp)\\|([^|]+)\\|"
# Finding matches in the "Entry" column
matches_merged40 <- str_match(merged40_tree$tip.label, pattern)[, 3]
# Filtering the data frame based on the matches
filtered_merged40_df <- merged40_df[merged40_df$Entry %in% matches_merged40, ]
##ADDING CLUSTER ANNOTATION COLUMN TO MERGED TSV
merged40_clstr <- import("Data/2nd Objective Data - Clustering Trees/5 - cluster_metadata_extraction/merged40_clstr.tsv")
# Finding matches in the "Entry" column
matches_merged40_clstr <- str_match(merged40_tree$tip.label, pattern)[, 3]
# Extracting the pattern from the "Entry" column
merged40_clstr$Entry <- str_extract(merged40_clstr$Entry, "(?<=\\|)[^|]+")
# adding the seq_count column to this AHL
merged40_clstr_df <- merge(filtered_merged40_df, merged40_clstr[c("Entry", "Seq_count")], by = "Entry", all.x = TRUE)
# Getting the names from the "tree" object
merged40tree_names <- merged40_tree$tip.label
# Assigning tree_names as labels for the "Entry" column in filtered_df
merged40_clstr_df$Entry <- merged40tree_names[match(merged40_clstr_df$Entry, matches_merged40)]
# check
merged40_clstr_df$Entry %in% merged40_tree$tip.label #doesnt show false?
merged40_tree$tip.label %in% merged40_clstr_df$Entry
# showing any sample IDs that are not on the tree
merged40_clstr_df$Entry[!merged40_tree$tip.label %in% merged40_clstr_df$Entry]
tcs_merged <- import("Data/2nd Objective Data - Clustering Trees/merged40 tree additional data/size_filt_tcs.tsv")
#36,212
ahl_merged <- import("Data/2nd Objective Data - Clustering Trees/merged40 tree additional data/size_filt_ahl.tsv")
# Filtering the data frame based on the matches
filt_tcs_merged <- tcs_merged[tcs_merged$Entry %in% matches_merged40, ]
#get 2478 entries..
filt_ahl_merged <- ahl_merged[ahl_merged$Entry %in% matches_merged40, ]
# Assigning tree_names as labels for the "Entry" column in filt_tcs and ahl dfs
filt_tcs_merged$Entry <- merged40tree_names[match(filt_tcs_merged$Entry, matches_merged40)]
filt_ahl_merged$Entry <- merged40tree_names[match(filt_ahl_merged$Entry, matches_merged40)]
# Checking for matches with filt_tcs_merged and assign "tcs"
merged40_clstr_df$ahl_tcs <- ifelse(merged40_clstr_df$Entry %in% filt_tcs_merged$Entry, "tcs", "")
# Checking for matches with filt_ahl_merged and assign "ahl"
merged40_clstr_df$ahl_tcs <- ifelse(merged40_clstr_df$Entry %in% filt_ahl_merged$Entry, "ahl", merged40_clstr_df$ahl_tcs)
#####################################################################################################
# coloring the tree by ahl vs tcs
# ADDING FONT, BOLD, TITLE to legend bar
ggtree(merged40_tree, layout = 'circular', branch.length = 'none') %<+% merged40_clstr_df +
aes(color = ahl_tcs) +
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 14, face = "bold")) +
# Adding a title to the legend bar
labs(color = "AHL or TCS type LuxR")
#####################################################################################################
# Creating clustering tree with cluster size and class annotations
ggtree(merged40_tree, layout = 'circular', branch.length = 'none') %<+% merged40_clstr_df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 100, 200, 400, 1000),
limits = c(0, 6500),
range = c(2, 10)) +
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 10, face = "plain"),   # Set the font size to 12 (you can adjust this value as needed)
legend.title = element_text(size = 12, face = "bold")) + # Set the font size to 14 and make it bold
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequnces)")
View(merged40_clstr_df)
# adding NAs to blank Class entries
# Replacing blank entries with NA in the "Class" column
merged40_clstr_df$Class <- ifelse(merged40_clstr_df$Class == "", NA, merged40_clstr_df$Class)
#####################################################################################################
# coloring the tree by ahl vs tcs
# ADDING FONT, BOLD, TITLE to legend bar
ggtree(merged40_tree, layout = 'circular', branch.length = 'none') %<+% merged40_clstr_df +
aes(color = ahl_tcs) +
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "bold"),
legend.title = element_text(size = 14, face = "bold")) +
# Adding a title to the legend bar
labs(color = "AHL or TCS type LuxR")
#####################################################################################################
# Creating clustering tree with cluster size and class annotations
ggtree(merged40_tree, layout = 'circular', branch.length = 'none') %<+% merged40_clstr_df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 100, 200, 400, 1000),
limits = c(0, 6500),
range = c(2, 10)) +
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 10, face = "plain"),   # Set the font size to 12 (you can adjust this value as needed)
legend.title = element_text(size = 12, face = "bold")) + # Set the font size to 14 and make it bold
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequnces)")
## USING the 13,888 AHL entries file
ahl40_df <- import("Data/1st Objective Data - Diversity & Distribution/4 - Class and Genus Size Filtered TSV/size_filtered_ahl_sbd_with_class_genus.tsv")
# ahl40_tree object
ahl40_tree <- ape::read.tree("Data/2nd Objective Data - Clustering Trees/4 - mega/2 - ahl40/ahl40_tree.txt")
ahl40_tree
# Extracting the pattern from the "tree" object
pattern <- "(tr|sp)\\|([^|]+)\\|"
# Finding matches in the "Entry" column
matches_ahl40 <- str_match(ahl40_tree$tip.label, pattern)[, 3]
# Filtering the data frame based on the matches
filtered_ahl40_df <- ahl40_df[ahl40_df$Entry %in% matches_ahl40, ]
# ADDING CLUSTER ANNOTATION COLUMN TO OG AHL TSV
ahl40_clstr <- import("Data/2nd Objective Data - Clustering Trees/5 - cluster_metadata_extraction/ahl40_cluster_extraction.tsv")
# Finding matches in the "Entry" column
matches_ahl40_clstr <- str_match(ahl40_tree$tip.label, pattern)[, 3]
head(matches_ahl40_clstr) #checking
# Extracting the pattern from the "Entry" column
ahl40_clstr$Entry <- str_extract(ahl40_clstr$Entry, "(?<=\\|)[^|]+")
# adding the seq_count column to this OG AHL
merged_ahl_40df <- merge(filtered_ahl40_df, ahl40_clstr[c("Entry", "Seq_count")], by = "Entry", all.x = TRUE)
# Get the names from the "tree" object
ahl40tree_names <- ahl40_tree$tip.label
head(ahl40tree_names) #checking
# Assign tree_names as labels for the "Entry" column in filtered_df
merged_ahl_40df$Entry <- ahl40tree_names[match(merged_ahl_40df$Entry, matches_ahl40)]
#checking
merged_ahl_40df$Entry %in% ahl40_tree$tip.label #doesnt show false
#show any sample IDs that are not on the tree
merged_ahl_40df$Entry[!ahl40_tree$tip.label %in% merged_ahl_40df$Entry]
## adding NAs to blank Class entries
# Replacing blank entries with NA in the "Class" column
merged_ahl_40df$Class <- ifelse(merged_ahl_40df$Class == "", NA, merged_ahl_40df$Class)
# want to know count of each class:
# Use the table() function to count the occurrences of each value in the "Class" column
class_counts <- table(merged_ahl_40df$Class)
# Display the counts
sort(class_counts)
## ADJUSTING FONT AND BOLDNESS
# Adding custom title to the legend bar
ggtree(ahl40_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_40df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),   # Set the font size to 12 (you can adjust this value as needed)
legend.title = element_text(size = 14, face = "bold")) + # Set the font size to 14 and make it bold
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequnces)")
######################################################################################################
###AHL70
## USING the 13,888 AHL entries file
ahl70_df <- import("Data/1st Objective - Diversity & Distribution/2 - Class and Genus Size Filtered TSV/size_filtered_ahl_sbd_with_class_genus.tsv")
######################################################################################################
###AHL70
## USING the 13,888 AHL entries file
ahl70_df <- import("Data/1st Objective Data - Diversity & Distribution/4 - Class and Genus Size Filtered TSV/size_filtered_ahl_sbd_with_class_genus.tsv")
# ahl70_tree object
ahl70_tree <- ape::read.tree("Data/2nd Objective Data - Clustering Trees/4 - mega/4 - ahl70/newick_tree.txt")
ahl70_tree
# Extract the pattern from the "tree" object
pattern <- "(tr|sp)\\|([^|]+)\\|"
# Find matches in the "Entry" column
matches_ahl70 <- str_match(ahl70_tree$tip.label, pattern)[, 3]
# Filter the data frame based on the matches
filtered_ahl70_df <- ahl70_df[ahl70_df$Entry %in% matches_ahl70, ]
# ADDING CLUSTER ANNOTATION COLUMN TO the AHL TSV
ahl70_clstr <- import("Data/2- trees/5 cluster_metadata_extraction/ahl70/ahl70_table.tsv")
# ADDING CLUSTER ANNOTATION COLUMN TO the AHL TSV
ahl70_clstr <- import("Data/2nd Objective Data - Clustering Trees/5 - cluster_metadata_extraction/ahl70_clstr_extraction.tsv")
# Extract the pattern from the "tree" object
pattern_clstr <- "(tr|sp)\\|([^|]+)\\|"
# Find matches in the "Entry" column
matches_ahl70_clstr <- str_match(ahl70_tree$tip.label, pattern)[, 3]
# Extract the pattern from the "Entry" column
ahl70_clstr$Entry <- str_extract(ahl70_clstr$Entry, "(?<=\\|)[^|]+")
# adding the seq_count column to this AHL
merged_ahl_70df <- merge(filtered_ahl70_df, ahl70_clstr[c("Entry", "Seq_count")], by = "Entry", all.x = TRUE)
# Getting the names from the "tree" object
ahl70tree_names <- ahl70_tree$tip.label
head(ahl70tree_names)
# Assigning tree_names as labels for the "Entry" column in filtered_df
merged_ahl_70df$Entry <- ahl70tree_names[match(merged_ahl_70df$Entry, matches_ahl70)]
#check
merged_ahl_70df$Entry %in% ahl70_tree$tip.label #doesnt show false
ahl70_tree$tip.label %in% merged_ahl_70df$Entry
#show any sample IDs that are not on the tree
merged_ahl_70df$Entry[!ahl70_tree$tip.label %in% merged_ahl_70df$Entry]
# adds NAs to blank Class entries
# Replacing blank entries with NA in the "Class" column
merged_ahl_70df$Class <- ifelse(merged_ahl_70df$Class == "", NA, merged_ahl_70df$Class)
# CLustering tree where customisation of FONT, BOLD, LEGEND enabled
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),
legend.title = element_text(size = 14, face = "bold")) +
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequences)")
# ADDing LABELS for reviewed LuxR entries
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
geom_tiplab(                          # add isolation year as a text label at the tips
aes(label = short_name),
color = 'black',
offset = 1,
size = 2,
linetype = "blank" ,
geom = "text",
align = TRUE)+                               # labels all the nodes in the tree
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),   # Set the font size to 12 (you can adjust this value as needed)
legend.title = element_text(size = 14, face = "bold")) + # Set the font size to 14 and make it bold
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequnces)")
View(merged_ahl_70df)
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
geom_tiplab(                          # adds isolation year as a text label at the tips
aes(label = "Entry Name"),
color = 'black',
offset = 1,
size = 2,
linetype = "blank" ,
geom = "text",
align = TRUE)+                               # labels all the nodes in the tree
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),
legend.title = element_text(size = 14, face = "bold")) +
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequnces)")
############## ############## ############## ############## ############## ############## ############
#DOING AN AHL70 REVIEWeD TABLE
reviewed_data<- import("Data/2nd Objective Data - Clustering Trees/6 - reviewed UniProt entries/reviewed UniProt entries.tsv")
# Loading the required libraries
library(gt)
# Selecting the desired columns
selected_columns_reviewed <- c("short_name", "Class", "clade")
# Create a styled table using the gt package
table <- reviewed_data[selected_columns_reviewed] %>%
gt() %>%
tab_header(title = "Reviewed AHL-binding LuxRs") %>%
fmt_number(columns = clade, decimals = 0) %>%
cols_label(
short_name = "Entry Name",
Class = "Class",
clade = "Clade",
)
# Display the styled table
print(table)
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
geom_tiplab(                          # adds isolation year as a text label at the tips
aes(label = short_name),
color = 'black',
offset = 1,
size = 2,
linetype = "blank" ,
geom = "text",
align = TRUE)+                               # labels all the nodes in the tree
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),
legend.title = element_text(size = 14, face = "bold")) +
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequnces)")
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
geom_tiplab(                          # adds isolation year as a text label at the tips
aes(label = "short_name"),
color = 'black',
offset = 1,
size = 2,
linetype = "blank" ,
geom = "text",
align = TRUE)+                               # labels all the nodes in the tree
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),
legend.title = element_text(size = 14, face = "bold")) +
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequnces)")
# Showing the styled table
print(table)
##kind of works for plotting both CLASS as color VS cluster size by tip SIZE: - ADD TITLE ETC?
ahl70_plot <- ggtree(ahl70_tree, layout='circular', branch.length = 'none' ) %<+% merged_ahl_70df +
aes(color=Class) + geom_tippoint(aes(size=Seq_count), alpha=.6)
plot(ahl70_plot)
ggtree(ahl70_tree, layout='circular', branch.length = 'none' ) %<+% merged_ahl_70df +
geom_text(aes(label=node))
ggtree(ahl70_tree, layout='circular', branch.length = 'none' ) %<+% merged_ahl_70df +
aes(color=Class) + geom_tippoint(aes(size=Seq_count), alpha=.6) + geom_text(aes(label=node))
###tryna get annotations of interjections
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tiplab()
###tryna get annotations of interjections
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tiplab()
##tryna modify 'bins'/ ranges of seq_count
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(20, 80, 100, 200, 600),
limits = c(0, 700),
range = c(2, 10))
### ADJUST FONT, BOLD, LEGEND
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),   # Set the font size to 12 (you can adjust this value as needed)
legend.title = element_text(size = 14, face = "bold")) + # Set the font size to 14 and make it bold
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequences)")
##TRYNA ADD REVIEW LABELS
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
geom_tiplab(                          # add isolation year as a text label at the tips
aes(label = short_name),
color = 'black',
offset = 1,
size = 2,
linetype = "blank" ,
geom = "text",
align = TRUE)+                               # labels all the nodes in the tree
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),   # Set the font size to 12 (you can adjust this value as needed)
legend.title = element_text(size = 14, face = "bold")) + # Set the font size to 14 and make it bold
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequnces)")
# Create a bar plot
ggplot(ahl70_clstr, aes(x = Entry, y = Seq_count)) +
geom_bar(stat = "identity", fill = "blue", width = 0.5) +
labs(title = "Seq_count Distribution",
x = "Entry",
y = "Seq_count")
sort(table(merged_ahl_70df$Class))
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
geom_tiplab(                          # adds isolation year as a text label at the tips
aes(label = "short_name"),
color = 'black',
offset = 1,
size = 2,
linetype = "blank" ,
geom = "text",
align = TRUE)+                               # labels all the nodes in the tree
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),
legend.title = element_text(size = 14, face = "bold")) +
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequnces)")
View(merged_ahl_70df)
# CLustering tree where customisation of FONT, BOLD, LEGEND enabled
ggtree(ahl70_tree, layout = 'circular', branch.length = 'none') %<+% merged_ahl_70df +
aes(color = Class) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
# Customization for font size and legend bar text bold
theme(legend.text = element_text(size = 12, face = "plain"),
legend.title = element_text(size = 14, face = "bold")) +
# Adding a custom title to the legend bar
labs(size = "Cluster Size (# Sequences)")
View(merged40_clstr_df)
ahl40_clades <- import("Data/2nd Objective Data - Clustering Trees/merged_ahl_40df_with_clades.tsv")
ahl40_clades$clades[ahl40_clades$clades == ""] <- NA
# Define your custom color scheme for clades
custom_colors <- c("clade_1" = "red", "clade_3" = "blue", "clade_2" = "green", "clade_4" = "magenta", "clade_5"= "yellow", "clade_6" = "turquoise2")
# Define the new names for the legend
new_legend_names <- c("clade_1" = "Clade 1", "clade_2" = "Clade 2", "clade_3" = "Clade 3", "clade_4" = "Clade 4", "clade_5" = "Clade 5", "clade_6" = "Clade 6")
sbd40_tree <- ape::read.tree("Data/2nd Objective Data - Clustering Trees/4 - mega/3 - sbd40/sbd40_tree.txt")
sbd40_tree
# Clustering tree where customisation of FONT, BOLD, LEGEND enabled
ggtree(sbd40_tree, layout = 'circular', branch.length = 'none') %<+% ahl40_clades +
aes(color = clades) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
theme(legend.text = element_text(size = 12, face = "plain"),
legend.title = element_text(size = 14, face = "bold")) +
labs(size = "Cluster Size (# Sequences)") +
# Manually specify the color scheme and rename the legend values
scale_color_manual(values = custom_colors, breaks = names(new_legend_names), labels = new_legend_names)
# Full AHL40 Clustering tree where customisation of FONT, BOLD, LEGEND enabled
ggtree(ahl40_tree, layout = 'circular', branch.length = 'none') %<+% ahl40_clades +
aes(color = clades) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
theme(legend.text = element_text(size = 12, face = "plain"),
legend.title = element_text(size = 14, face = "bold")) +
labs(size = "Cluster Size (# Sequences)") +
# Manually specify the color scheme and rename the legend values
scale_color_manual(values = custom_colors, breaks = names(new_legend_names), labels = new_legend_names)
## FOR DBD CLADE ASSIGNMENTS
dbd40_tree <- ape::read.tree("Data/2nd Objective Data - Clustering Trees/4 - mega/3 - dbd40/dbd40.txt")
dbd40_tree
# DBD40 Clustering tree where customisation of FONT, BOLD, LEGEND enabled
ggtree(dbd40_tree, layout = 'circular', branch.length = 'none') %<+% ahl40_clades +
aes(color = clades) +
geom_tippoint(aes(size = Seq_count), alpha = .6) +
scale_size_continuous(breaks = c(50, 150, 300, 450, 600),
limits = c(0, 800),
range = c(2, 10)) +
theme(legend.text = element_text(size = 12, face = "plain"),
legend.title = element_text(size = 14, face = "bold")) +
labs(size = "Cluster Size (# Sequences)") +
# Manually specify the color scheme and rename the legend values
scale_color_manual(values = custom_colors, breaks = names(new_legend_names), labels = new_legend_names)
library("ggplot2")
library("rio")
library("stringr")
luxr_data<- import("Data/3rd Objective Data - Species Level Analysis/species_lvl_cdhit_distrib.tsv")
# MAKING A 95-100% GRAPH
# Defining the necesary order of CD-HIT settings
cd_hit_order <- c("100%", "99%", "98%", "97%", "96%", "95%")
# Reordering the levels of CD_HIT_setting
luxr_data$CD_HIT_setting <- factor(luxr_data$CD_HIT_setting, levels = cd_hit_order)
# Making the plot
plot <- ggplot(luxr_data, aes(x = CD_HIT_setting, y = Number_of_Clusters, color = LuxR_type)) +
geom_point(size = 3, alpha = 0.8) +
geom_line(aes(group = LuxR_type), size = 1, alpha = 0.6) +
facet_wrap(~Species, scales = "free_y", ncol = 2) +
labs(x = "CD-HIT Setting (%)", y = "Number of Clusters", title = "Number of Clusters for Different CD-HIT Settings") +
theme_minimal() +
theme(
text = element_text(size = 14, face = "bold"),         # Adjust font size and boldness
axis.title = element_text(face = "bold"),              # Bold axis titles
plot.title = element_text(face = "bold", size = 16),   # Bold and larger plot title
strip.text = element_text(face = "bold")               # Bold facet labels
) +
labs(color = "LuxR Type")  # Change the title of the legend bar
# Show the plot
print(plot)
# ADDING LOG FOLD CHANGE - scatter plot version
luxr_data$log_fold_change <- log2(luxr_data$Number_of_Clusters / luxr_data$Seqs_before_CD_HIT)
# Creating the plot
plot <- ggplot(luxr_data, aes(x = CD_HIT_setting, y = log_fold_change, color = LuxR_type)) +
geom_point(size = 3, alpha = 0.8) +
geom_line(aes(group = LuxR_type), size = 1, alpha = 0.6) +
facet_wrap(~Species, scales = "free_y", ncol = 2) +
labs(x = "CD-HIT Setting(%)", y = "Log Fold Change", title = "Log Fold Change - Total Sequence Count ÷ Number of Clusters") +
theme_minimal() +
theme(
text = element_text(size = 14, face = "bold"),         # Adjust font size and boldness
axis.title = element_text(face = "bold"),              # Bold axis titles
plot.title = element_text(face = "bold", size = 16),   # Bold and larger plot title
strip.text = element_text(face = "bold")               # Bold facet labels
) +
labs(color = "LuxR Type")  # Change the title of the legend bar
# Show the plot
print(plot)
#######################################################################################################
# Making tables of certain luxr_data columns:
# gt package APPROACH
library(gt)
# Picking the necesary columns
selected_columns <- c("Species", "LuxR_type", "Seqs_before_CD_HIT", "CD_HIT_setting", "Number_of_Clusters")
# Define colors for LuxR types
luxr_colors <- c("BglJ" = "#F8766D", "CsgD" = "#CF9400", "DtcR" = "#7CAE00","EpcR" = "#00BE6C", "GadE" = "#00BFC4", "RcsA" = "#00A5FF", "SdiA" = "#C77CFF", "VpsT" = "#F763E0")
# Create a styled table using the gt package
table <- luxr_data[selected_columns] %>%
gt() %>%
tab_header(title = "Varying CD-HIT Settings Impact on Cluster Size") %>%
fmt_number(columns = c(Seqs_before_CD_HIT, Number_of_Clusters), decimals = 0) %>%
cols_label(
Species = "Species",
LuxR_type = "LuxR Type",
Seqs_before_CD_HIT = "Total Count",
CD_HIT_setting = "CD-HIT Setting",
Number_of_Clusters = "Number of Clusters"
)
# Display the styled table
print(table)
